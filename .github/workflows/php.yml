name: Unit Testing

on: [pull_request]

jobs:
  build:
    runs-on: ${{ matrix.operating-system }}
    container: ubuntu
    env:
      DB_DATABASE: db
      DB_USERNAME: root
      DB_PASSWORD: password

    services:
      mysql:
        image: mysql:5.7
        env:
          MYSQL_ALLOW_EMPTY_PASSWORD: false
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: db
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
      postgres:
        image: postgres:10-alpine
        env:
          POSTGRES_PASSWORD: password
          POSTGRES_USER: root
        options: --health-cmd pg_isready --health-interval 10s --health-timeout 5s --health-retries 5

    strategy:
      max-parallel: 6
      matrix:
        operating-system: [ubuntu-latest]
        #operating-system: [ubuntu-latest, windows-latest, macOS-latest]
        php-versions: ['7.2', '7.3']

    steps:
    - uses: actions/checkout@v1

    - name: Setup PHP, with composer and extensions
      uses: shivammathur/setup-php@master #https://github.com/shivammathur/setup-php
      with:
        php-version: ${{ matrix.php-versions }}
        extension-csv: mbstring, intl, curl, dom
        coverage: xdebug

    - name: Install dependencies
      run: composer install --no-progress --no-suggest --prefer-dist --optimize-autoloader

    - name: Test with phpunit and SQLite
      run: vendor/bin/phpunit --configuration phpunit.xml --coverage-text

    - name: Test with phpunit and MySQL
      run: vendor/bin/phpunit --configuration phpunit-mysql-workflow.xml --coverage-text

    - name: Merge logs
      run: vendor/bin/phpcov merge build/logs/ --clover build/logs/cc.xml;

    - name: Upload coverage to CodeCov
      uses: codecov/codecov-action@v1
      with:
        token: ${{ secrets.CODECOV_TOKEN }} #required
        file: build/logs/cc.xml
